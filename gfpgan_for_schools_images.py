# -*- coding: utf-8 -*-
"""GFPGAN for Schools Images.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/144v2FbpGLxHCePrdabHTwNqkFAseYHMq
"""

# Commented out IPython magic to ensure Python compatibility.
# Clone GFPGAN and enter the GFPGAN folder
# %cd /content
!rm -rf GFPGAN
!git clone https://github.com/bm777/GFPGAN.git
# %cd GFPGAN

# Set up the environment
# Install basicsr - https://github.com/xinntao/BasicSR
# We use BasicSR for both training and inference
!pip install basicsr
# Install facexlib - https://github.com/xinntao/facexlib
# We use face detection and face restoration helper in the facexlib package
!pip install facexlib
# Install other depencencies
!pip install -r requirements.txt
!python setup.py develop
!pip install realesrgan  # used for enhancing the background (non-face) regions
# Download the pre-trained model
!wget https://github.com/TencentARC/GFPGAN/releases/download/v0.2.0/GFPGANCleanv1-NoCE-C2.pth -P experiments/pretrained_models

from google.colab import drive
drive.mount('/content/drive')

import os
path_ = "/content/drive/My Drive/school/"

_ = "/content/drive/My Drive/dataset-b/"

uploaded = os.listdir(path_)



len(uploaded), len(os.listdir(_))

# upload your own images

from google.colab import files
import shutil, cv2


upload_folder = 'inputs/upload'

if os.path.isdir(upload_folder):
    shutil.rmtree(upload_folder)
os.mkdir(upload_folder)

# upload images
#uploaded = files.upload()

path_ = "/content/drive/My Drive/school/"
uploaded = os.listdir(path_)

for filename in uploaded[:]:
  dst_path = os.path.join(upload_folder, filename)
  
  if cv2.imread(path_+filename) is not None:
    print(f'copy {filename} to {dst_path}')
    shutil.copy(path_+filename, dst_path)

# Now we use the GFPGAN to restore the above low-quality images
!rm -rf results
!python inference_gfpgan.py --upscale 1 --test_path inputs/upload --save_root results --model_path experiments/pretrained_models/GFPGANCleanv1-NoCE-C2.pth --bg_upsampler realesrgan

res = os.listdir("results/restored_imgs")
print(len(res))
for filename in res:
  dst_path = os.path.join(upload_folder, filename)
  print(f'move {filename} to {dst_path}')
  shutil.copy("results/restored_imgs/"+filename, "/content/drive/My Drive/dataset-b/"+filename)

# download the result
!ls results